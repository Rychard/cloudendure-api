/* 
 * CloudEndure API documentation
 *
 * Â© 2019 CloudEndure All rights reserved  # General Request authentication in CloudEndure's API is done using session cookies. A session cookie is returned upon successful execution of the \"login\" method. This value must then be provided within the request headers of all subsequent API requests.  ## Errors Some errors are not specifically written in every method since they may always return. Those are: 1) 401 (Unauthorized) - for unauthenticated requests. 2) 405 (Method Not Allowed) - for using a method that is not supported (POST instead of GET). 3) 403 (Forbidden) - request is authenticated, but the user is not allowed to access. 4) 422 (Unprocessable Entity) - for invalid input.  ## Formats All strings with date-time format are according to RFC3339.  All strings with \"duration\" format are according to ISO8601. For example, a full day duration can be specified with \"PNNNND\". 
 *
 * OpenAPI spec version: 5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = CloudEndure.Client.SwaggerDateConverter;

namespace CloudEndure.Model
{
    /// <summary>
    /// Detailed machine lifecycle information.
    /// </summary>
    [DataContract]
        public partial class MachineLifeCycle :  IEquatable<MachineLifeCycle>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MachineLifeCycle" /> class.
        /// </summary>
        /// <param name="lastTestLaunchDateTime">lastTestLaunchDateTime.</param>
        /// <param name="connectionEstablishedDateTime">Timestamp of the initial CloudEndure agent access to the CloudEndure Service Manager event..</param>
        /// <param name="agentInstallationDateTime">Timestamp of the initial CloudEndure agent installation event..</param>
        /// <param name="lastCutoverDateTime">lastCutoverDateTime.</param>
        /// <param name="lastRecoveryLaunchDateTime">lastRecoveryLaunchDateTime.</param>
        public MachineLifeCycle(DateTime? lastTestLaunchDateTime = default(DateTime?), DateTime? connectionEstablishedDateTime = default(DateTime?), DateTime? agentInstallationDateTime = default(DateTime?), DateTime? lastCutoverDateTime = default(DateTime?), DateTime? lastRecoveryLaunchDateTime = default(DateTime?))
        {
            this.LastTestLaunchDateTime = lastTestLaunchDateTime;
            this.ConnectionEstablishedDateTime = connectionEstablishedDateTime;
            this.AgentInstallationDateTime = agentInstallationDateTime;
            this.LastCutoverDateTime = lastCutoverDateTime;
            this.LastRecoveryLaunchDateTime = lastRecoveryLaunchDateTime;
        }
        
        /// <summary>
        /// Gets or Sets LastTestLaunchDateTime
        /// </summary>
        [DataMember(Name="lastTestLaunchDateTime", EmitDefaultValue=false)]
        public DateTime? LastTestLaunchDateTime { get; set; }

        /// <summary>
        /// Timestamp of the initial CloudEndure agent access to the CloudEndure Service Manager event.
        /// </summary>
        /// <value>Timestamp of the initial CloudEndure agent access to the CloudEndure Service Manager event.</value>
        [DataMember(Name="connectionEstablishedDateTime", EmitDefaultValue=false)]
        public DateTime? ConnectionEstablishedDateTime { get; set; }

        /// <summary>
        /// Timestamp of the initial CloudEndure agent installation event.
        /// </summary>
        /// <value>Timestamp of the initial CloudEndure agent installation event.</value>
        [DataMember(Name="agentInstallationDateTime", EmitDefaultValue=false)]
        public DateTime? AgentInstallationDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastCutoverDateTime
        /// </summary>
        [DataMember(Name="lastCutoverDateTime", EmitDefaultValue=false)]
        public DateTime? LastCutoverDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastRecoveryLaunchDateTime
        /// </summary>
        [DataMember(Name="lastRecoveryLaunchDateTime", EmitDefaultValue=false)]
        public DateTime? LastRecoveryLaunchDateTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MachineLifeCycle {\n");
            sb.Append("  LastTestLaunchDateTime: ").Append(LastTestLaunchDateTime).Append("\n");
            sb.Append("  ConnectionEstablishedDateTime: ").Append(ConnectionEstablishedDateTime).Append("\n");
            sb.Append("  AgentInstallationDateTime: ").Append(AgentInstallationDateTime).Append("\n");
            sb.Append("  LastCutoverDateTime: ").Append(LastCutoverDateTime).Append("\n");
            sb.Append("  LastRecoveryLaunchDateTime: ").Append(LastRecoveryLaunchDateTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MachineLifeCycle);
        }

        /// <summary>
        /// Returns true if MachineLifeCycle instances are equal
        /// </summary>
        /// <param name="input">Instance of MachineLifeCycle to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MachineLifeCycle input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LastTestLaunchDateTime == input.LastTestLaunchDateTime ||
                    (this.LastTestLaunchDateTime != null &&
                    this.LastTestLaunchDateTime.Equals(input.LastTestLaunchDateTime))
                ) && 
                (
                    this.ConnectionEstablishedDateTime == input.ConnectionEstablishedDateTime ||
                    (this.ConnectionEstablishedDateTime != null &&
                    this.ConnectionEstablishedDateTime.Equals(input.ConnectionEstablishedDateTime))
                ) && 
                (
                    this.AgentInstallationDateTime == input.AgentInstallationDateTime ||
                    (this.AgentInstallationDateTime != null &&
                    this.AgentInstallationDateTime.Equals(input.AgentInstallationDateTime))
                ) && 
                (
                    this.LastCutoverDateTime == input.LastCutoverDateTime ||
                    (this.LastCutoverDateTime != null &&
                    this.LastCutoverDateTime.Equals(input.LastCutoverDateTime))
                ) && 
                (
                    this.LastRecoveryLaunchDateTime == input.LastRecoveryLaunchDateTime ||
                    (this.LastRecoveryLaunchDateTime != null &&
                    this.LastRecoveryLaunchDateTime.Equals(input.LastRecoveryLaunchDateTime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LastTestLaunchDateTime != null)
                    hashCode = hashCode * 59 + this.LastTestLaunchDateTime.GetHashCode();
                if (this.ConnectionEstablishedDateTime != null)
                    hashCode = hashCode * 59 + this.ConnectionEstablishedDateTime.GetHashCode();
                if (this.AgentInstallationDateTime != null)
                    hashCode = hashCode * 59 + this.AgentInstallationDateTime.GetHashCode();
                if (this.LastCutoverDateTime != null)
                    hashCode = hashCode * 59 + this.LastCutoverDateTime.GetHashCode();
                if (this.LastRecoveryLaunchDateTime != null)
                    hashCode = hashCode * 59 + this.LastRecoveryLaunchDateTime.GetHashCode();
                return hashCode;
            }
        }
    }
}
